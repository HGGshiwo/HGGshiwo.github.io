{"1": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "An LR(1) parser can detect errors earlierthan an LR(0) parser ", "multi": false}, "2": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "If a grammaris LR(1), then the LALR(1) parsing table cannot have any reduce-reduce conflicts. ", "multi": false}, "3": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "The topological sort of attribute computation of is unique ", "multi": false}, "4": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "An inherited attribute can be calculated by a post order traversal of the parse tree ", "multi": false}, "5": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "All regular expressions can be accepted by finite automata. ", "multi": false}, "6": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "​LL(1) grammar cannot be left-recursive. ", "multi": false}, "7": {"key": ["B"], "choices": {"A": "、‌正确 ", "B": "、错误 "}, "text": "Given a legal string of tokens for a CFG, there must be a unique parsing tree corresponding to the string. ", "multi": false}, "8": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "If a grammar is LR(1), but not LALR(1), then there may be shift-reduce conflicts in its parsing table of ‌LALR(1). ", "multi": false}, "9": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "‌The parse tree will completely reflect the derivation steps for a string. ", "multi": false}, "10": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "​Left recursion is commonly used to make operations left associative. ", "multi": false}, "11": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "‌LALR(1) grammar is more expressive than LL(1). ", "multi": false}, "12": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "​The lookahead symbol in LR(1) item A=[α.β,a]  is an element in First(A).   ", "multi": false}, "13": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "‍A nonterminal of a CFG is corresponding to a language construct. ", "multi": false}, "14": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "‌A LL(1) parsing of a string corresponds to a rightmost derivation of the string. ", "multi": false}, "15": {"key": ["A"], "choices": {"A": "、False ", "B": "、True "}, "text": "The runtime environment dependents only on the architecture of the target machine. ", "multi": false}, "16": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "The space for local temporaries is generally not allocated in the procedure activation record. ", "multi": false}, "17": {"key": ["B"], "choices": {"A": "、False ", "B": "、True "}, "text": "Intermediate code can be very high level, or it can closely resemble target code. ", "multi": false}, "18": {"key": ["A"], "choices": {"A": "、False ", "B": "、True "}, "text": "Semantic analysis is an independent phase that its computations always occur prior to code generation and after parsing. ", "multi": false}, "19": {"key": ["B"], "choices": {"A": "、False ", "B": "、True "}, "text": "All inherited attributes can be changed into synthesized attributes by suitable modification of the grammar, without changing the language of the grammar. ", "multi": false}, "20": {"key": ["B"], "choices": {"A": "、False ", "B": "、True "}, "text": "All the S-attribute grammars belong to L-attribute grammars. ", "multi": false}, "21": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "The general organization of runtime storage will contain the code area, the global/static area, a stack, a free space as well as a heap. ", "multi": false}, "22": {"key": ["A"], "choices": {"A": "、False ", "B": "、True "}, "text": "Yacc can not use ambiguous grammars. ", "multi": false}, "23": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "An inherited attribute can be calculated by a postorder traversal of the parse tree. ", "multi": false}, "24": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "When a procedure is called, an activation record P is generated on stack. There may be activation records on stack corresponding to sibling children nodes of P in the activation tree. ", "multi": false}, "25": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "Three-address code has three fields. ", "multi": false}, "26": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "The activation record kept in the stack is always directly pointed by frame pointer (fp). ", "multi": false}, "27": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "Given a legal string of tokens for a CFG, there must be a unique parsing tree to derivate the string. ", "multi": false}, "28": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "Left-recursive CFG cannot be LL(1) ", "multi": false}, "29": {"key": ["B"], "choices": {"A": "、True ", "B": "、False "}, "text": "The language L={a^nb^n } can’t be generated by any CFG ", "multi": false}, "30": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "There is only one parse tree for a string of an unambiguous grammar ", "multi": false}, "31": {"key": ["A"], "choices": {"A": "、True ", "B": "、False "}, "text": "Both DFA and NFA can recognize regular set ", "multi": false}, "32": {"key": ["A"], "choices": {"A": "、‍正确 ", "B": "、错误 "}, "text": "All inherited attributes can be changed into synthesized attributes by suitable modification of the grammar, without changing the language of the grammar.     ", "multi": false}, "33": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "The attribute values of an L-attributed grammar can be computed by a single bottom-up, or post-order, traversal of the parse or syntax tree.   ", "multi": false}, "34": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "An LR(1) parser can detect errors earlier than an LR(0) parser. ", "multi": false}, "35": {"key": ["A"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "If a grammar is LR(1) but not LALR(1), then the LALR(1) parsing table have reduce-reduce conflicts. ", "multi": false}, "36": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "​The topological sort of attribute computation is unique. ", "multi": false}, "37": {"key": ["A"], "choices": {"A": "、A.正确 ", "B": "、B.错误 "}, "text": "A synthesized attribute can be calculated by a postorder traversal of the parse tree. ", "multi": false}, "38": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "LR(1) grammar cannot be left-recursive. ", "multi": false}, "39": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "ε may be an element of the follow set of a non-terminal. ", "multi": false}, "40": {"key": ["B"], "choices": {"A": "、A.正确 ", "B": "、错误 "}, "text": "The front end of compiler consists of scanner, parser and code generator. ", "multi": false}, "41": {"key": ["B"], "choices": {"A": "、正确 ", "B": "、错误 "}, "text": "​There may be activation records on stack corresponding to sibling nodes of P in the activation tree. ", "multi": false}, "42": {"key": ["B"], "choices": {"A": "、just leaving it on the value stack ", "B": "、external data structure ", "C": "、parsing as parameter ", "D": "、return value "}, "text": "When inheriting a previously computed synthesized attribute during LR parsing, it is suitable to treat the computed synthesized attribute as ________. ", "multi": false}, "43": {"key": ["C"], "choices": {"A": "、mark and sweep ", "B": "、memory compaction ", "C": "、display ", "D": "、stop-and-copy "}, "text": "The concept  ________ is not related with automatic management of the heap. ", "multi": false}, "44": {"key": ["D"], "choices": {"A": "、static variable ", "B": "、symbol table ", "C": "、global variable ", "D": "、temporaries "}, "text": "Which of the following is commonly found in an activation record?   ", "multi": false}, "45": {"key": ["B"], "choices": {"A": "、saving the used registers  ", "B": "、computing the arguments ", "C": "、setting up bookkeeping information ", "D": "、saving the return address "}, "text": "In the following, ________ must be done by the caller. ", "multi": false}, "46": {"key": ["C"], "choices": {"A": "、stack ", "B": "、linear list ", "C": "、hash table ", "D": "、tree "}, "text": "The suitable structure of the symbol table with large amount of symbols is ________. ", "multi": false}, "47": {"key": ["D"], "choices": {"A": "、semantic ", "B": "、name ", "C": "、declaration ", "D": "、structural "}, "text": "Given the following declarations:     t1 = array [10] of int;  t2 = array [10] of int;  if t1 and t2 is equivalent, it follows ________ equivalence. ", "multi": false}, "48": {"key": ["C"], "choices": {"A": "、return address ", "B": "、control link ", "C": "、stack pointer ", "D": "、access link "}, "text": "The space for bookkeeping information will not contain________. ", "multi": false}, "49": {"key": ["D"], "choices": {"A": "、pass by reference ", "B": "、pass by value-result ", "C": "、pass by value ", "D": "、pass by name "}, "text": "The idea of delayed evaluation is used in  ________ parameter passing mechanism. ", "multi": false}, "50": {"key": ["B"], "choices": {"A": "、a syntax tree ", "B": "、an annotated tree ", "C": "、a parse tree ", "D": "、a token stream "}, "text": "The output of the semantic analysis phase is _____________. ", "multi": false}, "51": {"key": ["D"], "choices": {"A": "、activation tree ", "B": "、control link ", "C": "、frame pointer ", "D": "、access link "}, "text": "Which of the following is used to retrieve nonlocal data declared within another procedure? ", "multi": false}, "52": {"key": ["C"], "choices": {"A": "、stack-based environments without local procedures ", "B": "、fully static runtime environment ", "C": "、stack-based environments with local procedures ", "D": "、fully dynamic runtime environment "}, "text": "The access link will be used in ________. ", "multi": false}, "53": {"key": ["D"], "choices": {"A": "、terminal stack ", "B": "、action stack ", "C": "、non-terminal stack ", "D": "、value stack "}, "text": "A Yacc-generated parser implements the semantic values by keeping a ________ parallel to the parsing stack. ", "multi": false}, "54": {"key": ["A"], "choices": {"A": "、A synthesized attribute at node N can be  defined in terms of inherited attribute values at node N itself. ", "B": "、A synthesized attribute at node N can not  be  defined in terms of attribute values at the children of  N. ", "C": "、A synthesized attribute at node N can not  be  defined in terms of inherited attribute values at node N itself. ", "D": "、An inherited attribute at node N can be defined in terms of attribute values at the children of node N. "}, "text": "Which of the following is true ? ", "multi": false}, "55": {"key": ["A"], "choices": {"A": "、directed, acyclic ", "B": "、directed , cyclic ", "C": "、undirected, acyclic ", "D": "、undirected, cyclic "}, "text": "When computing the attributes of a language, a traverse order of the dependency graph must be _____. ", "multi": false}, "56": {"key": ["D"], "choices": {"A": "、ccbbaa  ", "B": "、ccaabb  ", "C": "、ccbbaa  ", "D": "、aabbcc "}, "text": "Which of the following string can be defined by theregular expression (a|b)*ab*c(a|b|c)* ", "multi": false}, "57": {"key": ["D"], "choices": {"A": "、Match  ", "B": "、Generate  ", "C": "、Accept  ", "D": "、Reduce "}, "text": "Which action is notin a LL(1) parsing table? ", "multi": false}, "58": {"key": ["B"], "choices": {"A": "、token  ", "B": "、syntax tree  ", "C": "、target code  ", "D": "、intermediate code "}, "text": "The output of the parser is_______. ", "multi": false}, "59": {"key": ["B"], "choices": {"A": "、Syntax tree  ", "B": "、Parse tree  ", "C": "、Binary tree  ", "D": "、Quadtree "}, "text": "_______reflects the derivation steps of a string. ", "multi": false}, "60": {"key": ["C"], "choices": {"A": "、Right recursion  ", "B": "、Indirect recursion  ", "C": "、Left recursion  ", "D": "、Left factoring "}, "text": "_______is commonly used to make operations left associative ", "multi": false}, "61": {"key": ["C"], "choices": {"A": "、tokens  ", "B": "、CFG  ", "C": "、an abstract syntax tree  ", "D": "、a parse tree "}, "text": "The input of semantic analysis phase is _____________ ", "multi": false}, "62": {"key": ["D"], "choices": {"A": "、top-down  ", "B": "、LL(1)  ", "C": "、SLR(1)  ", "D": "、LALR(1) "}, "text": "A Yacc-generated parser employ________ method to parse the input token stream ", "multi": false}, "63": {"key": ["D"], "choices": {"A": "、data type  ", "B": "、scope  ", "C": "、liveness  ", "D": "、location in memory "}, "text": "The symbol tables will not carry the ________ information about the variables ", "multi": false}, "64": {"key": ["B"], "choices": {"A": "、Reduce  ", "B": "、Match  ", "C": "、Shift  ", "D": "、Accept "}, "text": "In the Bottom-Up Parsing, the action ( ) will never be used. ", "multi": false}, "65": {"key": ["D"], "choices": {"A": "、A.token stream                        ", "B": "、B.CFG  ", "C": "、C.an abstract syntax tree          ", "D": "、D.an annotated tree "}, "text": "The output of semantic analysis phase is _____________. ", "multi": false}, "66": {"key": ["B"], "choices": {"A": "、name             ", "B": "、structural      ", "C": "、declaration    ", "D": "、none of the above "}, "text": "Given the following declarations： t1 = array [10] of int;  t2 = array [10] of int; if t1 and t2 is equivalent, it follows ________ equivalence. ", "multi": false}, "67": {"key": ["B"], "choices": {"A": "、return value                        ", "B": "、external data structure ", "C": "、passing as parameter         ", "D": "、just leaving it on the value stack "}, "text": "When inheriting a previously computed synthesized attribute during LR parsing, it is suitable to treat the computed synthesized attribute as ________. ", "multi": false}, "68": {"key": ["D"], "choices": {"A": "、top-down        ", "B": "、LL(1)        ", "C": "、SLR(1)         ", "D": "、LALR(1) "}, "text": "A Yacc-generated parser employ ________ method to parse the input token stream. ", "multi": false}, "69": {"key": ["D"], "choices": {"A": "、data type    ", "B": "、scope   ", "C": "、liveness     ", "D": "、location in memory "}, "text": "The symbol tables will not carry the ________ information about the variables. ", "multi": false}, "70": {"key": ["B"], "choices": {"A": "、The hash table often provides the best choice for implementing the symbol table. ", "B": "、The symbol table is not involved with semantic analysis. ", "C": "、The behavior of a symbol table depends heavily on the properties of declarations of the language being translated. ", "D": "、Type information is maintained in the symbol table and retrieved by the type checker. "}, "text": "About the symbol table, ________ is false. ", "multi": false}, "71": {"key": ["C"], "choices": {"A": "、activation tree       ", "B": "、frame pointer        ", "C": "、access link     ", "D": "、control link "}, "text": "Which of the following is used to retrieve nonlocal data declared within another procedure? ", "multi": false}, "72": {"key": ["A"], "choices": {"A": "、passing by reference ", "B": "、passing by name       ", "C": "、passing value-result  ", "D": "、none of the above "}, "text": "The parameter passing mechanism of C++ language includes _________. ", "multi": false}, "73": {"key": ["D"], "choices": {"A": "、Return address          ", "B": "、Control link     ", "C": "、Parameters         ", "D": "、Access link "}, "text": "‍________ is included in the activation record of PASCAL but not in that of C. ", "multi": false}, "74": {"key": ["B"], "choices": {"A": "、sp      ", "B": "、fp      ", "C": "、ap     ", "D": "、pc "}, "text": "When a procedure exits the caller load the control link into the ______. ", "multi": false}, "75": {"key": ["B"], "choices": {"A": "、ε ", "B": "、FIRST(α) ", "C": "、FIRST(B) ", "D": "、FIRST(β) "}, "text": "‍Given production A→αBβ, if B is not nullable, ________ is contained in FIRST(A) set? ", "multi": false}, "76": {"key": ["C"], "choices": {"A": "、cannot have left recursion ", "B": "、cannot have right recursion ", "C": "、may be left recursive ", "D": "、may have shift-reduce conflict "}, "text": "A LR(1) grammar ______.  ", "multi": false}, "77": {"key": ["A"], "choices": {"A": "、LL(k)  ", "B": "、LR(k) ", "C": "、SLR ", "D": "、LALR(k) "}, "text": "In the following parsing methods, ____ is the top-down parsing method? ", "multi": false}, "78": {"key": ["B"], "choices": {"A": "、Follow (C) ⊂ Follow (A) , First( B) -ε ⊂ First(A) ", "B": "、Follow (A) ⊂ Follow (C), First(B)-ε ⊂ First(A) ", "C": "、Follow (C) ⊂ Follow (A), First( A) -ε ⊂ First(B) ", "D": "、Follow (A) ⊂ Follow (C), First( A) -ε ⊂ First(B) "}, "text": "Given the production A →BαC，we have _______. ", "multi": false}, "79": {"key": ["B"], "choices": {"A": "、A) ", "B": "、(A ", "C": "、((A)A)A ", "D": "、() "}, "text": "Given the grammar rules: A’→A, A→ (A) A | ε and the rightmost derivation A’=>A=> (A)A=>(A)(A)A => (A)(A) => (A)()=>()().  ________ is the viable prefix the sentential form (A)(A). ", "multi": false}, "80": {"key": ["C"], "choices": {"A": "、{a,b} ⊂ First(A) ", "B": "、{a,b} ⊂ First(B) ", "C": "、{a,b} ⊂ Follow(A) ", "D": "、{a,b} ⊂ Follow(B) "}, "text": "​Give the LR(1) item [A→∙αBc,a/b], we have        .  ", "multi": false}, "81": {"key": ["C"], "choices": {"A": "、X ", "B": "、Y ", "C": "、Z ", "D": "、W "}, "text": "​Here is a grammar:  X→a   X→ε    Y→b   Y→X   Z→c   Z→XYZ  W→d  W→XY  Which symbol is not nullable? ", "multi": false}, "82": {"key": ["A"], "choices": {"A": "、LALR(1) ", "B": "、LR(1)  ", "C": "、SLR(1) ", "D": "、LL(1) "}, "text": "​The parsing method of YACC is _______. ", "multi": false}, "83": {"key": ["B"], "choices": {"A": "、token ", "B": "、syntax tree ", "C": "、target code  ", "D": "、intermediate code "}, "text": "The output of the parser is _______. ", "multi": false}, "84": {"key": ["D"], "choices": {"A": "、Left factoring ", "B": "、First set and follow set ", "C": "、Remove left recursion ", "D": "、Remove right recursion "}, "text": "‍Which one is not related to the LL(1) parsing method. ", "multi": false}, "85": {"key": ["A", "C", "D"], "choices": {"A": "、n ", "B": "、n+ ", "C": "、E ", "D": "、E+ "}, "text": "‍Given the CFG: E’→E, E→E + n | n, _______ is(are) the viable prefix(es) of the right sentential form ‘n+n’. ", "multi": true}, "86": {"key": ["A", "D"], "choices": {"A": "、First(β1) ∩ First(β2) is empty ", "B": "、First (B) ∩ Follow (A) is empty ", "C": "、First (A) ∩ Follow (A) is empty ", "D": "、First (α1) ∩ Follow (A) is empty "}, "text": "If a LL(1) grammar contains the rules: A→α1|ε; B→β1|β2, then the following condition ______ must be satisfied.  ", "multi": true}, "87": {"key": ["A", "D"], "choices": {"A": "、Shift ", "B": "、Generate ", "C": "、Accept ", "D": "、Reduce "}, "text": "Action(s) ________ is(are) not taken during a LL(1) parsing. ", "multi": true}, "88": {"key": ["B", "D"], "choices": {"A": "、For any item A→α∙Xβ in s with X a terminal, there is no complete item B→γ∙ in s with X in First(γ). ", "B": "、For any item A→α∙Xβ in s with X a terminal, there is no complete item B→γ∙ in s with X in Follow(B). ", "C": "、For any two complete items A→α∙ and B→β∙ in s, First(α) ∩ First(β) is empty. ", "D": "、For any two complete items A→α∙ and B→β∙ in s, Follow(A) ∩ Follow(B) is empty. "}, "text": "A CFG is SLR, if and only for any state s, the following two conditions are satisfied: ", "multi": true}, "89": {"key": ["A", "B", "D"], "choices": {"A": "、reduce ", "B": "、accept ", "C": "、generate ", "D": "、shift "}, "text": "​Action(s) ________ is(are) taken in LR parsing. ", "multi": true}}